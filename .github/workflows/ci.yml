name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: install deps linux
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        sudo apt install meson pkg-config libfmt-dev python3-dev cython3 python3-pytest python3-venv
        echo "LD_LIBRARY_PATH=`pwd`/build:$LD_LIBRARY_PATH" >> "$GITHUB_ENV"
    - name: install deps macos
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        brew install meson fmt
        python3 -m venv venv
        . venv/bin/activate
        pip install cython setuptools pytest

        echo "$VIRTUAL_ENV/bin" >> "$GITHUB_PATH"
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"
        echo "DYLD_LIBRARY_PATH=`pwd`/build:$DYLD_LIBRARY_PATH" >> "$GITHUB_ENV"
    - name: Export GitHub Actions cache environment variables
      if: ${{ startsWith(matrix.os, 'windows-') }}
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
    - name: install deps windows
      if: ${{ startsWith(matrix.os, 'windows-') }}
      env: 
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      run: |
        vcpkg install
        python3 -m venv venv
        venv/scripts/activate.bat
        pip install meson ninja cython setuptools pytest
        echo "`pwd`/build" >> "$GITHUB_PATH"
        echo "`pwd`/vcpkg_installed/x64-windows/bin" >> "$GITHUB_PATH"
        echo "$VIRTUAL_ENV/scripts" >> "$GITHUB_PATH"
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"

    - name: configure
      if: ${{ !startsWith(matrix.os, 'windows-') }}
      run: |
        meson setup build
    - name: configure windows
      if: ${{ startsWith(matrix.os, 'windows-') }}
      run: |
        meson setup build --native-file vcpkg-native.txt

    - name: build
      run: ninja -vC build -j2

    - name: pybuild
      run: |
        cd python
        python3 setup.py build_ext --inplace --library-dirs=../build #--rpath=`pwd`/../build

    - name: test
      run: |
        echo "$PATH"
        meson test -C build --no-rebuild --print-errorlogs -v
        cd python
        python3 -m pytest --log-level=DEBUG -v

# vim: sts=2 sw=2 et
